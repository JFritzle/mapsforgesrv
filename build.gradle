plugins {
	id "application"
	id "eclipse"
	// https://github.com/johnrengelman/shadow/releases
	id 'com.gradleup.shadow' version "8.3.5"
 	// https://github.com/nebula-plugins/gradle-lint-plugin/releases
	id "nebula.lint" version "20.2.2"
}

repositories {
	mavenCentral()
}

dependencies {
	def mapsforgeVersion = '+'
	def jettyVersion = '9.4.56.v20240826'
	def slf4j = '+'

	implementation "org.mapsforge:mapsforge-core:${mapsforgeVersion}"
	implementation "org.mapsforge:mapsforge-map-awt:${mapsforgeVersion}"
	implementation "org.mapsforge:mapsforge-map-reader:${mapsforgeVersion}"
	runtimeOnly    "org.mapsforge:mapsforge-themes:${mapsforgeVersion}"
	
	implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
	implementation "org.eclipse.jetty.http2:http2-server:${jettyVersion}"

    runtimeOnly    "org.slf4j:slf4j-reload4j:${slf4j}"
    implementation "org.slf4j:jul-to-slf4j:${slf4j}"

    implementation "commons-cli:commons-cli:+"
    implementation "org.apache.commons:commons-lang3:+"
    implementation "com.github.marschall:memoryfilesystem:+"
}

application {
	 mainClass.set("com.telemaxx.mapsforgesrv.MapsforgeSrv")
}

// https://github.com/johnrengelman/shadow
shadowJar {
	archiveBaseName.set('mapsforgesrv4java8')
	archiveClassifier.set('')
	archiveVersion.set('')
	// https://github.com/johnrengelman/shadow/issues/341#issuecomment-445556737
	mergeServiceFiles {
		path = 'META-INF/services'
		include 'org.eclipse.jetty.http.HttpFieldPreEncoder'
	}
}

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
	}
}

task copyFatJar2jars_ready2use(type: Copy, dependsOn: 'shadowJar') {
	group 'distribution'
	description 'Copy the fatJar to bin/jars_ready2use/'
	from file("$buildDir/libs/mapsforgesrv4java8.jar")
	into file("$buildDir/../bin/jars_ready2use/")
}

gradleLint.rules = ["all-dependency"]
