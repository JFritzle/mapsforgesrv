/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */


plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
  	implementation 'org.mapsforge:mapsforge-core:[0.15.0]'
	implementation 'org.mapsforge:mapsforge-map:[0.15.0]'
	implementation 'org.mapsforge:mapsforge-map-reader:[0.15.0]'
	implementation 'org.mapsforge:mapsforge-themes:[0.15.0]'
	implementation 'org.mapsforge:mapsforge-map-awt:[0.15.0]'
	implementation 'org.mapsforge:mapsforge-poi-awt:[0.15.0]'
	implementation 'org.mapsforge:mapsforge-poi:[0.15.0]'
	
	implementation 'org.xerial:sqlite-jdbc:3.30.1'
	
	implementation 'net.sf.kxml:kxml2:2.3.0' 
    
    //implementation 'org.eclipse.jetty:jetty-server:9.4.25.v20191220'
    implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '11.0.1'
    
	implementation 'com.github.blackears:svgSalamander:v1.1.2'
}

    mainClassName = 'com.telemaxx.mapsforgesrv.MapsforgeSrv'

	task fatJar(type: Jar, dependsOn: classes) {
	    classifier = 'fatjar'
	    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
		    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
		    manifest {
		        attributes 'Main-Class': "${mainClassName}"
	    }
	    with jar
	}

    //create a single Jar with all dependencies
/*task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.telemaxx.mapsforgesrv.MapsforgeSrv'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}*/